<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.timeline.vpn.dao.db.RadacctDao">
	<resultMap id="RadacctStateMap" type="RadacctState">
		<result column="acctSessionTime" property="acctSessionTime" />
		<result column="acctInputOctets" property="acctInputOctets" />
		<result column="acctOutputOctets" property="acctOutputOctets" />
	</resultMap>
	<resultMap id="RadacctMap" type="Radacct">
	    <id column="radacctid" property="radacctid"/>
		<result column="fromAddr" property="from" />
		<result column="toAddr" property="to" />
		<result column="nasipaddress" property="nasipaddress" />
		<result column="callingstationid" property="callingstationid" />
		<result column="status" property="status" />
	</resultMap>
	<select id="dateState" resultMap="RadacctStateMap">
		select sum(acctsessiontime) acctSessionTime,sum(acctinputoctets)acctInputOctets, sum(acctoutputoctets) acctOutputOctets
		from radius.radacct where username=#{userName}
	</select>
	<select id="selectIpLocal" resultMap="RadacctMap">
		select radacctid,nasipaddress,callingstationid,fromAddr,toAddr,status
		from radius.radacct where status=0 LIMIT 100
	</select>
	<update id="updateIpLocal">
	    <foreach collection="list" item="item" index="index" open="" close="" separator=";">  
                update radius.radacct    
                <set>  
                  fromAddr='${item.from}',
                  toAddr='${item.to}',
                  status=1
                </set>  
                where radacctid =${item.radacctid}  
         </foreach>  
            
	</update>
</mapper>
